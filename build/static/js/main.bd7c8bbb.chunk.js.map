{"version":3,"sources":["store/store.js","Pages/about.js","components/todo-list/styles.js","components/todo-list/todo-header.js","components/todo-list/index.js","utils/constants.js","components/add-form/styles.js","components/add-form/index.js","Pages/todo.js","App.js","index.js"],"names":["store","createStore","state","action","type","text","title","completed","filter","item","index","map","About","TrashAll","styled","TrashAlt","TrashItem","Trash","EditPencil","Pencil","ActionButton","button","props","edit","css","ClearAll","div","ClearAllBtn","TodoList","ul","TodoItem","li","isEditing","TodoText","span","isComplete","CheckItem","input","Header","HeaderText","isDate","data","Date","todayDate","getDay","getDate","getMonth","getFullYear","TodoHeader","memo","editIndex","setIndex","setTodoText","console","log","dispatch","useDispatch","todos","useSelector","onClickRemove","removeIndex","newTodoList","key","onChange","handleCheckboxChange","name","onClick","window","confirm","onClickEdit","PlusIcon","PlusMedical","SaveIcon","Save","TodoForm","form","InputText","AddButton","Form","todoText","e","target","value","disabled","event","preventDefault","List","useState","setEditIndex","length","App","className","to","id","exact","path","component","Todo","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bd7c8bbb.chunk.js","sourcesContent":["import { createStore } from \"redux\"\r\n\r\nconst todos = (state = [], action) => {\r\n    switch(action.type){\r\n        case 'ADD_TODO':\r\n            return [\r\n                ...state,\r\n                {\r\n                    text: action.title,\r\n                    completed: false\r\n                }\r\n            ]\r\n        case 'REMOVE_TODO':\r\n            return state.filter((item,index) => index !== action.index)\r\n\r\n        case 'CLEAR_ALL':\r\n            return []\r\n        \r\n\r\n        case 'EDIT_TODO':\r\n            return state.map((item, index) => \r\n                (index !== action.index) \r\n                    ? item \r\n                    : {text: action.title})\r\n\r\n        case 'COMPLETE_TODO':\r\n            return state.map((item, index) => \r\n                (index === action.index) \r\n                    ? {...item, completed: !item.completed} \r\n                    : item)\r\n                    \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst store = createStore(todos)\r\n\r\nexport default store","import React from 'react'\r\n\r\nconst About = () => {\r\n    return(\r\n        <div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About","import styled, {css} from 'styled-components'\r\nimport {TrashAlt} from 'styled-icons/boxicons-solid/TrashAlt'\r\nimport {Trash} from 'styled-icons/boxicons-regular/Trash'\r\nimport {Pencil} from 'styled-icons/boxicons-regular/Pencil'\r\n\r\n// Ícones da lista de To-Do\r\n\r\nexport const TrashAll = styled(TrashAlt)`\r\n    color: white;\r\n`\r\nexport const TrashItem = styled(Trash)`\r\n    color: white;\r\n`\r\nexport const EditPencil = styled(Pencil)`\r\n    color: white;\r\n`\r\n\r\nexport const ActionButton = styled.button`\r\n    width: 35px;\r\n    height: 35px;\r\n    float: right;\r\n    margin-right: 20px;\r\n    margin-bottom: 10px;\r\n    \r\n    outline: none;\r\n    border: none;\r\n    border-radius: 20px;\r\n\r\n    background-color: #ff1100;\r\n\r\n    &:hover{\r\n        background-color: crimson;\r\n    }\r\n\r\n    ${props => props.edit && css`\r\n        background-color: #00a62c;\r\n\r\n        &:hover{\r\n            background-color: #01701f;\r\n        }\r\n    `}\r\n`\r\n\r\nexport const ClearAll = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`\r\n\r\nexport const ClearAllBtn = styled.button`\r\n    width: 40px;\r\n    height: 40px;\r\n    outline:none;\r\n\r\n    border-radius: 20px;\r\n    border:none;\r\n    background-color:#ff1100;\r\n\r\n    &:hover{\r\n        background-color: #cf0e00;\r\n    }\r\n`\r\n\r\nexport const TodoList = styled.ul`\r\n    width: 40%;\r\n    height: 70vh;\r\n    margin-top: 60px;\r\n    margin-left: 25vw;\r\n    padding-top: 10px;\r\n    position: relative;\r\n  \r\n    border-radius: 15px;\r\n  \r\n    background-color: aliceblue;\r\n    box-shadow: 0 0 20px 0 rgba(0, 0, 0, 0.2), 0 5px 5px 0 rgba(0, 0, 0, 0.24);\r\n    font-family: 'Lemonada', cursive;\r\n\r\n    &:first-child{\r\n        color:purple;\r\n    }\r\n`\r\n\r\nexport const TodoItem = styled.li`\r\n    width: 85%;\r\n    margin-left: 20px;\r\n    margin-top: 20px;\r\n    list-style-type: none;\r\n\r\n    ${props => props.isEditing && css`\r\n        color: darkcyan;\r\n    `}\r\n`\r\n\r\nexport const TodoText = styled.span`\r\n    ${props => props.isComplete && css`\r\n        text-decoration: line-through;\r\n        color: green;\r\n    `}\r\n`\r\n\r\nexport const CheckItem = styled.input`\r\n`","import React from \"react\"\r\nimport styled, {css} from 'styled-components'\r\n\r\nconst Header = styled.div`\r\n    text-align: center;\r\n    margin-left: -40px;\r\n    margin-bottom: 30px;\r\n`\r\n\r\nconst HeaderText = styled.div`\r\n    width: 100%;\r\n\r\n\r\n    ${props=>props.isDate && css`\r\n        color: purple;\r\n        padding-bottom: 10px;\r\n        margin-bottom: 10px;\r\n        border-bottom: 1px solid rgba(0, 0, 0, 40%);\r\n    `}\r\n`\r\n\r\nconst data = new Date()\r\nconst weekDays = ['Domingo', 'Segunda', 'Terça', 'Quarta', 'Quinta', 'Sexta', 'Sábado']\r\nconst months = ['Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho',\r\n                'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro']\r\nconst todayDate = `${weekDays[data.getDay()]}, ${data.getDate()} de ${months[data.getMonth()]} de ${data.getFullYear()}`\r\n\r\nconst TodoHeader = () => {\r\n    return(\r\n        <Header>\r\n            <HeaderText isDate>{todayDate}</HeaderText>\r\n            <HeaderText>Lista de Tarefas</HeaderText>\r\n        </Header>\r\n    )\r\n}\r\n\r\nexport default TodoHeader","import React, {memo} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { IS_EDITING_TODO } from \"../../utils/constants\";\r\n\r\nimport * as S from './styles'\r\n\r\nconst TodoList = ({editIndex, setIndex, setTodoText}) => {\r\n    console.log(setIndex)\r\n    const dispatch = useDispatch()\r\n    const todos = useSelector(state => state)\r\n\r\n    const onClickConfirmRemove = (removeIndex) => {\r\n        const confirmRemove = window.confirm(\"Deseja realmente apagar essa tarefa?\")\r\n        if(confirmRemove) onClickRemove(removeIndex)\r\n    }\r\n\r\n    const onClickRemove = (removeIndex) => {\r\n        const newTodoList = todos.filter((item, index) => index !== removeIndex)\r\n        dispatch({\r\n            type: 'REMOVE_TODO',\r\n            data: newTodoList, \r\n            index: removeIndex\r\n        })\r\n    }\r\n\r\n    const isEditing = (index) => index === editIndex && editIndex >= IS_EDITING_TODO\r\n\r\n    const onClickEdit = (index) => {\r\n        const text = todos\r\n        setIndex(index)\r\n        setTodoText(text[index].text)\r\n    }\r\n\r\n    const handleCheckboxChange = (index) => {\r\n        dispatch({type: 'COMPLETE_TODO', index})\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {todos.map((item, index) =>\r\n                <S.TodoItem key={index} isEditing={isEditing(index)}>\r\n\r\n                    <S.CheckItem \r\n                        type=\"checkbox\" \r\n                        onChange={() => handleCheckboxChange(index)} \r\n                    />\r\n\r\n                    <S.TodoText isComplete={item.completed}>\r\n                        {item.text}\r\n                    </S.TodoText>\r\n\r\n                    <S.ActionButton \r\n                        name=\"delete\" \r\n                        onClick={() => onClickConfirmRemove(index)}\r\n                    >\r\n                        <S.TrashItem />\r\n                    </S.ActionButton>\r\n\r\n                    <S.ActionButton \r\n                        name=\"edit\" \r\n                        onClick={() => onClickEdit(index)}\r\n                        edit\r\n                    >\r\n                        <S.EditPencil />\r\n                    </S.ActionButton>\r\n\r\n                    {isEditing(index) ? '| Editando...' : ''}\r\n                </S.TodoItem>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nTodoList.propTypes = {\r\n    editIndex: PropTypes.number.isRequired,\r\n    setIndex: PropTypes.func.isRequired,\r\n    setTodoText: PropTypes.func.isRequired\r\n}\r\n\r\nexport default memo(TodoList)","// Arquivo de constantes do sistema\r\n\r\nexport const IS_ADDING_TODO = -1\r\nexport const IS_EDITING_TODO = 0","import styled from 'styled-components'\r\nimport {PlusMedical} from 'styled-icons/boxicons-regular/PlusMedical'\r\nimport {Save} from 'styled-icons/material/Save'\r\n\r\nexport const PlusIcon = styled(PlusMedical)`\r\n    color: white;\r\n`\r\n\r\nexport const SaveIcon = styled(Save)`\r\n    color: white;\r\n`\r\n\r\nexport const TodoForm = styled.form`\r\n    position: absolute;\r\n    width: 100%;\r\n    bottom: 0; left: 0;\r\n    margin-bottom: 60px;\r\n    \r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n`\r\n\r\nexport const InputText = styled.input`\r\n    width: 80%;\r\n    height: 30px;\r\n    outline: none;\r\n    padding-left: 15px;\r\n    text-align: center;\r\n    border: none;\r\n    border-bottom: 3px solid #5b1773;\r\n    background-color: aliceblue;\r\n    border-radius: 3px;\r\n`     \r\n\r\nexport const AddButton = styled.button`\r\n    width: 70px;\r\n    height: 70px;\r\n    position: fixed;\r\n    margin-top: 60px;\r\n    outline: none;\r\n  \r\n    border: none;\r\n    border-radius: 40px;\r\n    background-color: #5b1773;\r\n\r\n    &:hover{\r\n        background-color: #32a852;\r\n    }\r\n`","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { useDispatch } from 'react-redux';\r\nimport * as S from './styles'\r\n\r\nimport { IS_ADDING_TODO } from '../../utils/constants'\r\n\r\nconst Form = ({editIndex, setIndex, todoText, setTodoText}) => {\r\n    const dispatch = useDispatch()\r\n    \r\n    const onSubmit = (event) => {\r\n        event.preventDefault()\r\n        if (editIndex === IS_ADDING_TODO){\r\n          \r\n            dispatch({type: 'ADD_TODO', title: todoText})\r\n        } else {\r\n            dispatch({\r\n                type: 'EDIT_TODO', \r\n                title: todoText, \r\n                index: editIndex\r\n            })\r\n        }\r\n\r\n        setIndex(IS_ADDING_TODO)\r\n        setTodoText('')\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <S.TodoForm>\r\n                <S.InputText\r\n                    type=\"text\"\r\n                    name=\"inputTask\"\r\n                    onChange={(e) => setTodoText(e.target.value)}\r\n                    value={todoText}\r\n                />                \r\n            </S.TodoForm>\r\n            <S.TodoForm>\r\n                <S.AddButton disabled={!todoText} onClick={onSubmit}>\r\n                    {(editIndex < 0) \r\n                        ? <S.PlusIcon />\r\n                        : <S.SaveIcon />\r\n                    }\r\n                </S.AddButton>\r\n            </S.TodoForm>\r\n        </>\r\n    )\r\n}\r\n\r\nForm.propTypes = {\r\n    editIndex: PropTypes.number.isRequired,\r\n    setIndex: PropTypes.func.isRequired,\r\n    todoText: PropTypes.string.isRequired,\r\n    setTodoText: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Form","import React, {useState} from 'react'\r\nimport * as S from '../components/todo-list/styles'\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { IS_ADDING_TODO } from \"../utils/constants\";\r\nimport TodoHeader from '../components/todo-list/todo-header'\r\nimport TodoList from '../components/todo-list'\r\nimport InputForm from '../components/add-form'\r\n\r\nconst List = () => {\r\n    const [editIndex, setEditIndex] = useState(IS_ADDING_TODO)\r\n    const [todoText, setTodoText] = useState('')\r\n\r\n    const todos = useSelector(state => state)\r\n    const dispatch = useDispatch()\r\n\r\n    const setIndex = (index) => {\r\n        setEditIndex(index)\r\n    }\r\n\r\n    const onClickClearAll = () => {\r\n        dispatch({type: 'CLEAR_ALL'})\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <S.TodoList>\r\n                <TodoHeader />\r\n\r\n                <TodoList \r\n                    editIndex={editIndex}\r\n                    setIndex={setIndex}\r\n                    setTodoText={setTodoText}\r\n                />\r\n\r\n                {todos.length !== 0 ? (\r\n                    <S.ClearAll>\r\n                        <S.ClearAllBtn onClick={onClickClearAll}>\r\n                            <S.TrashAll />\r\n                        </S.ClearAllBtn>\r\n                    </S.ClearAll>\r\n                ) : (\r\n                    null\r\n                )}  \r\n\r\n                <InputForm\r\n                    editIndex={editIndex}\r\n                    setIndex={setIndex}\r\n                    todoText={todoText}\r\n                    setTodoText={setTodoText}\r\n                />\r\n            </S.TodoList>            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default List","import React from 'react'\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom'\r\nimport './App.css'\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport store from './store/store'\r\n\r\nimport About from './Pages/about'\r\nimport Todo from './Pages/todo'\r\n\r\nconst App = () => {\r\n  return (\r\n    <Provider store={store}>\r\n      <Router>\r\n        <nav>\r\n            <ul className=\"nav-list\">\r\n                <li className=\"nav-item\">\r\n                    <Link to=\"/\">Tarefas</Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <Link to=\"/about\">Sobre</Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n        <div id=\"main-page\">\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Todo} />\r\n            <Route path=\"/about\" component={About} />\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    </Provider>\r\n  ) \r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}